// AUTOGENERATED FILE - DO NOT MODIFY!
// This file was generated by Djinni from djinni_perf_benchmark.djinni

#include "NativeDjinniPerfBenchmark.hpp"  // my header
#include "DataRef_wasm.hpp"
#include "DataView_wasm.hpp"
#include "NativeEnumSixValue.hpp"
#include "NativeObjectNative.hpp"
#include "NativeObjectPlatform.hpp"
#include "NativeRecordSixInt.hpp"

namespace djinni_generated {

em::val NativeDjinniPerfBenchmark::cppProxyMethods() {
    static const em::val methods = em::val::array(std::vector<std::string> {
        "cppTests",
        "baseline",
        "argString",
        "argBinary",
        "argDataRef",
        "argDataView",
        "argEnumSixValue",
        "argRecordSixInt",
        "argListInt",
        "argArrayInt",
        "argObject",
        "argListObject",
        "argListRecord",
        "argArrayRecord",
        "returnInt",
        "returnString",
        "returnBinary",
        "returnObject",
        "returnListInt",
        "returnArrayInt",
        "returnListObject",
        "returnListRecord",
        "returnArrayRecord",
        "roundTripString",
    });
    return methods;
}

em::val NativeDjinniPerfBenchmark::getInstance() {
    try {
        auto r = ::snapchat::djinni::benchmark::DjinniPerfBenchmark::getInstance();
        return ::djinni_generated::NativeDjinniPerfBenchmark::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni_generated::NativeDjinniPerfBenchmark>::handleNativeException(e);
    }
}
int64_t NativeDjinniPerfBenchmark::cppTests(const CppType& self) {
    try {
        auto r = self->cppTests();
        return ::djinni::I64::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni::I64>::handleNativeException(e);
    }
}
void NativeDjinniPerfBenchmark::baseline(const CppType& self) {
    try {
        self->baseline();
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
void NativeDjinniPerfBenchmark::argString(const CppType& self, const std::string& w_s) {
    try {
        self->argString(::djinni::String::toCpp(w_s));
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
void NativeDjinniPerfBenchmark::argBinary(const CppType& self, const em::val& w_b) {
    try {
        self->argBinary(::djinni::Binary::toCpp(w_b));
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
void NativeDjinniPerfBenchmark::argDataRef(const CppType& self, const em::val& w_r) {
    try {
        self->argDataRef(::djinni::NativeDataRef::toCpp(w_r));
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
void NativeDjinniPerfBenchmark::argDataView(const CppType& self, const em::val& w_d) {
    try {
        self->argDataView(::djinni::NativeDataView::toCpp(w_d));
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
void NativeDjinniPerfBenchmark::argEnumSixValue(const CppType& self, int32_t w_e) {
    try {
        self->argEnumSixValue(::djinni_generated::NativeEnumSixValue::toCpp(w_e));
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
void NativeDjinniPerfBenchmark::argRecordSixInt(const CppType& self, const em::val& w_r) {
    try {
        self->argRecordSixInt(::djinni_generated::NativeRecordSixInt::toCpp(w_r));
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
void NativeDjinniPerfBenchmark::argListInt(const CppType& self, const em::val& w_v) {
    try {
        self->argListInt(::djinni::List<::djinni::I64>::toCpp(w_v));
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
void NativeDjinniPerfBenchmark::argArrayInt(const CppType& self, const em::val& w_v) {
    try {
        self->argArrayInt(::djinni::Array<::djinni::I64>::toCpp(w_v));
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
void NativeDjinniPerfBenchmark::argObject(const CppType& self, const em::val& w_c) {
    try {
        self->argObject(::djinni_generated::NativeObjectPlatform::toCpp(w_c));
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
void NativeDjinniPerfBenchmark::argListObject(const CppType& self, const em::val& w_l) {
    try {
        self->argListObject(::djinni::List<::djinni_generated::NativeObjectPlatform>::toCpp(w_l));
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
void NativeDjinniPerfBenchmark::argListRecord(const CppType& self, const em::val& w_l) {
    try {
        self->argListRecord(::djinni::List<::djinni_generated::NativeRecordSixInt>::toCpp(w_l));
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
void NativeDjinniPerfBenchmark::argArrayRecord(const CppType& self, const em::val& w_a) {
    try {
        self->argArrayRecord(::djinni::List<::djinni_generated::NativeRecordSixInt>::toCpp(w_a));
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<void>::handleNativeException(e);
    }
}
int64_t NativeDjinniPerfBenchmark::returnInt(const CppType& self, int64_t w_i) {
    try {
        auto r = self->returnInt(::djinni::I64::toCpp(w_i));
        return ::djinni::I64::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni::I64>::handleNativeException(e);
    }
}
std::string NativeDjinniPerfBenchmark::returnString(const CppType& self, int32_t w_size) {
    try {
        auto r = self->returnString(::djinni::I32::toCpp(w_size));
        return ::djinni::String::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni::String>::handleNativeException(e);
    }
}
em::val NativeDjinniPerfBenchmark::returnBinary(const CppType& self, int32_t w_size) {
    try {
        auto r = self->returnBinary(::djinni::I32::toCpp(w_size));
        return ::djinni::Binary::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni::Binary>::handleNativeException(e);
    }
}
em::val NativeDjinniPerfBenchmark::returnObject(const CppType& self) {
    try {
        auto r = self->returnObject();
        return ::djinni_generated::NativeObjectNative::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni_generated::NativeObjectNative>::handleNativeException(e);
    }
}
em::val NativeDjinniPerfBenchmark::returnListInt(const CppType& self, int32_t w_size) {
    try {
        auto r = self->returnListInt(::djinni::I32::toCpp(w_size));
        return ::djinni::List<::djinni::I64>::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni::List<::djinni::I64>>::handleNativeException(e);
    }
}
em::val NativeDjinniPerfBenchmark::returnArrayInt(const CppType& self, int32_t w_size) {
    try {
        auto r = self->returnArrayInt(::djinni::I32::toCpp(w_size));
        return ::djinni::Array<::djinni::I64>::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni::Array<::djinni::I64>>::handleNativeException(e);
    }
}
em::val NativeDjinniPerfBenchmark::returnListObject(const CppType& self, int32_t w_size) {
    try {
        auto r = self->returnListObject(::djinni::I32::toCpp(w_size));
        return ::djinni::List<::djinni_generated::NativeObjectNative>::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni::List<::djinni_generated::NativeObjectNative>>::handleNativeException(e);
    }
}
em::val NativeDjinniPerfBenchmark::returnListRecord(const CppType& self, int32_t w_size) {
    try {
        auto r = self->returnListRecord(::djinni::I32::toCpp(w_size));
        return ::djinni::List<::djinni_generated::NativeRecordSixInt>::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni::List<::djinni_generated::NativeRecordSixInt>>::handleNativeException(e);
    }
}
em::val NativeDjinniPerfBenchmark::returnArrayRecord(const CppType& self, int32_t w_size) {
    try {
        auto r = self->returnArrayRecord(::djinni::I32::toCpp(w_size));
        return ::djinni::List<::djinni_generated::NativeRecordSixInt>::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni::List<::djinni_generated::NativeRecordSixInt>>::handleNativeException(e);
    }
}
std::string NativeDjinniPerfBenchmark::roundTripString(const CppType& self, const std::string& w_s) {
    try {
        auto r = self->roundTripString(::djinni::String::toCpp(w_s));
        return ::djinni::String::fromCpp(r);
    }
    catch(const std::exception& e) {
        return ::djinni::ExceptionHandlingTraits<::djinni::String>::handleNativeException(e);
    }
}

EMSCRIPTEN_BINDINGS(snapchat_djinni_benchmark_djinni_perf_benchmark) {
    em::class_<::snapchat::djinni::benchmark::DjinniPerfBenchmark>("benchmark_DjinniPerfBenchmark")
        .smart_ptr<std::shared_ptr<::snapchat::djinni::benchmark::DjinniPerfBenchmark>>("benchmark_DjinniPerfBenchmark")
        .function("nativeDestroy", &NativeDjinniPerfBenchmark::nativeDestroy)
        .class_function("getInstance", NativeDjinniPerfBenchmark::getInstance)
        .function("cppTests", NativeDjinniPerfBenchmark::cppTests)
        .function("baseline", NativeDjinniPerfBenchmark::baseline)
        .function("argString", NativeDjinniPerfBenchmark::argString)
        .function("argBinary", NativeDjinniPerfBenchmark::argBinary)
        .function("argDataRef", NativeDjinniPerfBenchmark::argDataRef)
        .function("argDataView", NativeDjinniPerfBenchmark::argDataView)
        .function("argEnumSixValue", NativeDjinniPerfBenchmark::argEnumSixValue)
        .function("argRecordSixInt", NativeDjinniPerfBenchmark::argRecordSixInt)
        .function("argListInt", NativeDjinniPerfBenchmark::argListInt)
        .function("argArrayInt", NativeDjinniPerfBenchmark::argArrayInt)
        .function("argObject", NativeDjinniPerfBenchmark::argObject)
        .function("argListObject", NativeDjinniPerfBenchmark::argListObject)
        .function("argListRecord", NativeDjinniPerfBenchmark::argListRecord)
        .function("argArrayRecord", NativeDjinniPerfBenchmark::argArrayRecord)
        .function("returnInt", NativeDjinniPerfBenchmark::returnInt)
        .function("returnString", NativeDjinniPerfBenchmark::returnString)
        .function("returnBinary", NativeDjinniPerfBenchmark::returnBinary)
        .function("returnObject", NativeDjinniPerfBenchmark::returnObject)
        .function("returnListInt", NativeDjinniPerfBenchmark::returnListInt)
        .function("returnArrayInt", NativeDjinniPerfBenchmark::returnArrayInt)
        .function("returnListObject", NativeDjinniPerfBenchmark::returnListObject)
        .function("returnListRecord", NativeDjinniPerfBenchmark::returnListRecord)
        .function("returnArrayRecord", NativeDjinniPerfBenchmark::returnArrayRecord)
        .function("roundTripString", NativeDjinniPerfBenchmark::roundTripString)
        ;
}

} // namespace djinni_generated
